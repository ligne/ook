# vim: ts=4 : sw=4 : et

[tool:pytest]
testpaths = t/
xfail_strict = true

filterwarnings =
    # make Deprecations fatal
    error::DeprecationWarning
    error::FutureWarning
    # expected from the app
    ignore:Duplicate works in series:UserWarning


[tool:isort]
profile = black
line_length = 100
lines_after_imports = 2
force_sort_within_sections = true
float_to_top = true


[coverage:run]
parallel = true
branch = true


[coverage:report]
skip_covered = true
sort = Cover

exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    AbstractMethodError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if False:
    if __name__ == .__main__.:
    if TYPE_CHECKING:


[flake8]
max-line-length = 100
exclude =
    .git,
    __pycache__,
    data,
    images,
    old,

# FIXME see also http://flake8.pycqa.org/en/latest/user/options.html#cmdoption-flake8-per-file-ignores
ignore =
    # Missing docstring in public module
    D100,
    # Missing docstring in public class
    D101,
    # Missing docstring in public method
    D102,
    # Missing docstring in public function
    D103,
    # Missing docstring in public package
    D104,
    # Missing docstring in magic method
    D105,
    # Missing docstring in __init__
    D107,

    # incompatible with black:
    #
    # No blank lines allowed after function docstring
    D202,
    # whitespace before ':'
    E203,
    # line break before binary operator
    W503,
    # too many leading '#' for block comment; fails on delimiter comments
    E266,


[mypy]
files = reading/*.py, t/*.py
# hide errors from all but the selected file(s)
follow_imports=silent

strict = true
# ignore the noisy ones for now
check_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false
# not yet the default as of 1.0
warn_unreachable = true

#disallow_any_unimported = true
#enable_error_code = truthy-bool, ignore-without-code, redundant-self, redundant-expr, truthy-iterable

[mypy-bs4]
ignore_missing_imports = True

[mypy-calibre.ebooks.metadata.meta]
ignore_missing_imports = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-jinja2]
ignore_missing_imports = True

[mypy-numpy]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-pytest]
ignore_missing_imports = True

[mypy-google.auth.transport.requests]
ignore_missing_imports = True

[mypy-google_auth_oauthlib.flow]
ignore_missing_imports = True
